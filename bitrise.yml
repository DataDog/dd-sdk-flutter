---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: flutter

workflows:
  primary:
    before_run:
    - _setup
    - _build
    - integration_ios
    - integration_android
    
  _build:
    steps:
    - script:
        title: Pub get in example and integration tests
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            cd $BITRISE_SOURCE_DIR/example
            flutter pub get
            cd $BITRISE_SOURCE_DIR/integration_test_app
            flutter pub get
        - working_dir: "$BITRISE_SOURCE_DIR"

    - flutter-analyze@0.3.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR"

    - script:
        title: Android lint and static analysis
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            gradle wrapper
            ./gradlew ktlintCheck detekt
        - working_dir: "$BITRISE_SOURCE_DIR/example/android"
    
    - flutter-test@1.0.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR"
    
    - flutter-test@1.0.1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/example"
    - flutter-build@0.14.0:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/example"
        - platform: both
    - deploy-to-bitrise-io: {}

  _setup:
    steps:
    - script:
        title: Generate env files
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            ./generate_env.sh

  integration_android:
    before_run:
    - _setup
    steps:
    - script:
        title: Boot android emulator
        inputs:
        - content: |-
            #!/usr/bin/env bash

            # fail if any commands fails
            set -e

            # debug log
            set -x

            CMDLINE_TOOLS_HOME=$(find $ANDROID_HOME/cmdline-tools/* -maxdepth 1 -type d -print -quit)

            $CMDLINE_TOOLS_HOME/bin/sdkmanager --update
            $CMDLINE_TOOLS_HOME/bin/sdkmanager --install "emulator"
            $CMDLINE_TOOLS_HOME/bin/sdkmanager --install "system-images;android-30;google_apis;x86"
            echo "no" | $CMDLINE_TOOLS_HOME/bin/avdmanager --verbose create avd --force --name "emulator" --device "pixel" --package "system-images;android-30;google_apis;x86" --tag "google_apis" --abi "x86"
            $ANDROID_HOME/emulator/emulator @emulator -no-boot-anim -no-window -netdelay none -camera-back none -camera-front none -no-snapshot -wipe-data -verbose -show-kernel -no-audio -gpu swiftshader_indirect -no-snapshot &> /tmp/log.txt & 
            sleep 90
    - flutter-test@1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/integration_test_app"
        - tests_path_pattern: "integration_test"
        - additional_params: "-d emulator --dart-define DD_CLIENT_TOKEN=$DD_CLIENT_TOKEN,DD_APPLICATION_ID=$DD_APPLICATION_ID"
    - deploy-to-bitrise-io: {}
  
  integration_ios:
    before_run:
    - _setup
    steps:
    - script:
        title: Launch iOS Simulator
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -e
            flutter emulators --launch apple_ios_simulator
            # Sleep while the simulator warms a bit
            sleep 5
    - flutter-test@1:
        inputs:
        - project_location: "$BITRISE_SOURCE_DIR/integration_test_app"
        - tests_path_pattern: "integration_test"
        - additional_params: "-d iPhone --dart-define DD_CLIENT_TOKEN=$DD_CLIENT_TOKEN,DD_APPLICATION_ID=$DD_APPLICATION_ID"
    - deploy-to-bitrise-io: {}

